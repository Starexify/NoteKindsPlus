import flixel.FlxG;
import funkin.modding.events.ScriptEvent;
import funkin.modding.module.ScriptedModule;
import funkin.play.character.BaseCharacter;
import funkin.play.character.CharacterType;
import funkin.play.notes.NoteSprite;
import funkin.play.notes.Strumline;
import funkin.play.PlayState;

class NoteKindsHandler extends ScriptedModule {
    public static var DIRECTION_NAMES:Array<String> = ["LEFT", "DOWN", "UP", "RIGHT"];
    public static var HOLD_SUFFIX = "-hold";

    var playState(get, never):PlayState;

    function get_playState():PlayState { return PlayState.instance; }

    override public function onNoteHit(event:HitNoteScriptEvent) {
        if (playState == null || playState.currentStage == null) return;

        var hitter:BaseCharacter;
        if (event.note.noteData.getMustHitNote(Strumline.KEY_COUNT)) hitter = playState.currentStage.getBoyfriend();
        else hitter = playState.currentStage.getDad();
        if (hitter == null) return;

        switch (event.note.kind) {
            case "no-anim", "gf-sing":
                var oldExclPref = hitter.ignoreExclusionPref;
                event.note.lowPriority = true;
                hitter.ignoreExclusionPref = [];
                hitter.canPlayOtherAnims = false;
                FlxG.signals.postUpdate.addOnce(() -> {
                    hitter.canPlayOtherAnims = true;
                    hitter.ignoreExclusionPref = oldExclPref;
                });
                switch (hitter.characterType) {
                    case CharacterType.BF: hasDoubles(playState.playerStrumline, hitter, event.note);
                    case CharacterType.DAD: hasDoubles(playState.opponentStrumline, hitter, event.note);
                }
        }
    }

    function hasDoubles(strumline:Strumline, hitter:BaseCharacter, hitNote:NoteSprite) {
        for (note in strumline.notes) {
            if (note == hitNote || note.kind == "no-anim" || note.kind == "gf-sing") continue;

            if (Math.abs(note.strumTime - hitNote.strumTime) < 1) {
                var singAnim = "sing" + DIRECTION_NAMES[note.direction];
                if (hitNote.isHoldNote) singAnim += HOLD_SUFFIX;
                hitter.animation.play(singAnim, true);
            }
        }
    }
}